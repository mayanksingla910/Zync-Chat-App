// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String     @id @default(uuid())
  username     String     @unique
  email        String     @unique
  password     String
  profilePic   String?                    
  bio          String?
  lastActive   DateTime?                  
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  // Relationships
  messages     Message[]  @relation("UserMessages")
  chats        Chat[]     @relation("UserChats")      
  seenMessages Message[]  @relation("SeenMessages")
  adminOf      Chat[]     @relation("GroupAdmins")          
  attachments  Attachment[]                        
}

model Chat {
  id           String     @id @default(uuid())
  isGroup      Boolean    @default(false)                
  name         String?                                       
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  // Relationships
  users        User[]     @relation("UserChats")
  admins       User[]     @relation("GroupAdmins")          
  messages     Message[]                                    
}

model Message {
  id           String     @id @default(uuid())
  content      String                                        
  createdAt    DateTime   @default(now())
  editedAt     DateTime?
  deletedAt    DateTime?                                 

  // Foreign keys
  senderId     String
  chatId       String

  // Relationships
  sender       User       @relation("UserMessages", fields: [senderId], references: [id])
  chat         Chat       @relation(fields: [chatId], references: [id])
  seenBy       User[]     @relation("SeenMessages")
  attachments  Attachment[]                                
}

model Attachment {
  id            String   @id @default(uuid())
  url           String
  type          String                                      
  createdAt     DateTime @default(now())

  // Foreign keys
  messageId     String
  uploadedById  String

  // Relationships
  message       Message  @relation(fields: [messageId], references: [id])
  uploadedBy    User     @relation(fields: [uploadedById], references: [id])
}

